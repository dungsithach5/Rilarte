const nodemailer = require('nodemailer');

// Ki·ªÉm tra c·∫•u h√¨nh email
if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
  console.error('‚ùå EMAIL_USER ho·∫∑c EMAIL_PASS kh√¥ng ƒë∆∞·ª£c c·∫•u h√¨nh!');
  console.error('üìß Vui l√≤ng th√™m v√†o file .env:');
  console.error('   EMAIL_USER=your-email@gmail.com');
  console.error('   EMAIL_PASS=your-app-password');
  console.error('üîë L∆∞u √Ω: EMAIL_PASS ph·∫£i l√† "App Password" t·ª´ Google, kh√¥ng ph·∫£i m·∫≠t kh·∫©u th∆∞·ªùng!');
}

// C·∫•u h√¨nh transporter v·ªõi Gmail (n√™n d√πng bi·∫øn m√¥i tr∆∞·ªùng cho b·∫£o m·∫≠t)
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.EMAIL_USER, // email g·ª≠i
    pass: process.env.EMAIL_PASS  // m·∫≠t kh·∫©u ·ª©ng d·ª•ng
  }
});

// H√†m g·ª≠i mail
async function sendMail({ to, subject, text, html }) {
  // Ki·ªÉm tra c·∫•u h√¨nh email
  if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
    throw new Error('Email configuration missing. Please set EMAIL_USER and EMAIL_PASS in .env file');
  }

  const mailOptions = {
    from: process.env.EMAIL_USER,
    to,
    subject,
    text,
    html
  };
  
  try {
    return await transporter.sendMail(mailOptions);
  } catch (error) {
    console.error('‚ùå L·ªói g·ª≠i email:', error);
    
    // Cung c·∫•p th√¥ng tin l·ªói chi ti·∫øt h∆°n
    if (error.code === 'EAUTH') {
      throw new Error('Email authentication failed. Please check EMAIL_USER and EMAIL_PASS');
    } else if (error.code === 'ECONNECTION') {
      throw new Error('Email connection failed. Please check your internet connection');
    } else {
      throw new Error(`Email sending failed: ${error.message}`);
    }
  }
}

module.exports = { transporter, sendMail }; 